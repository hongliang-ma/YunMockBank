/*
 * Alipay.com Inc.
 * Copyright (c) 2004 - 2010 All Rights Reserved.
 * Powered By [rapid-generator]
 */

package com.mock.dal.ibatis;

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.springframework.dao.DataAccessException;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import com.mock.dal.daointerface.UserDAO;
import com.mock.dal.dataobject.UserDO;

/**
 * UserDAO
 * database table: anymock_user
 * database table comments: User
 * This file is generated by <tt>dalgen</tt>, a DAL (Data Access Layer)
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to 
 * directory <tt>(project-home)/dalgen</tt>
 * @author badqiu(zhongxuan)
 *

 */
public class IbatisUserDAO extends SqlMapClientDaoSupport implements UserDAO {

    /**
     * 
     * sql: 
     * <pre>insert      into         anymock_user         (        username,        password,        superuser        )          values         (?,?,?)</pre>
     */
    public long insert(UserDO user) throws DataAccessException {
        if (user == null) {
            throw new IllegalArgumentException("Can't insert a null data object into db.");
        }
        getSqlMapClientTemplate().insert("anymock.User.insert", user);
        return user.getId();
    }

    /**
     * 
     * sql: 
     * <pre>select         id,         username,         password,         superuser          from         anymock_user</pre>
     */
    @SuppressWarnings("unchecked")
    public List<UserDO> loadAll() throws DataAccessException {
        return getSqlMapClientTemplate().queryForList("anymock.User.loadAll", null);
    }

    /**
     * 
     * sql: 
     * <pre>select         password,        superuser           from         anymock_user           where         username =?</pre>
     */
    public UserDO selectByName(String username) throws DataAccessException {
        return (UserDO) getSqlMapClientTemplate().queryForObject("anymock.User.selectByName",
            username);
    }

    /**
     * 
     * sql: 
     * <pre>update         anymock_user      set         superuser = ?           where         username =?</pre>
     */
    public int upSuperStatus(String superuser, String username) throws DataAccessException {
        Map<String, Object> param = new HashMap<String, Object>();
        param.put("superuser", superuser);
        param.put("username", username);
        return getSqlMapClientTemplate().update("anymock.User.upSuperStatus", param);
    }

}
